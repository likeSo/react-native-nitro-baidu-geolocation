///
/// HybridNitroBaiduGeolocationSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridNitroBaiduGeolocationSpec``
public protocol HybridNitroBaiduGeolocationSpec_protocol: HybridObject {
  // Properties
  

  // Methods
  func sum(num1: Double, num2: Double) throws -> Double
  func agreePrivacyPolicy(agree: Bool) throws -> Void
  func initialize(ak: String) throws -> Promise<Double>
  func getCurrentLocation(options: GetLocationOptions) throws -> Promise<Location>
}

/// See ``HybridNitroBaiduGeolocationSpec``
open class HybridNitroBaiduGeolocationSpec_base {
  private weak var cxxWrapper: HybridNitroBaiduGeolocationSpec_cxx? = nil
  public init() { }
  public func getCxxWrapper() -> HybridNitroBaiduGeolocationSpec_cxx {
  #if DEBUG
    guard self is HybridNitroBaiduGeolocationSpec else {
      fatalError("`self` is not a `HybridNitroBaiduGeolocationSpec`! Did you accidentally inherit from `HybridNitroBaiduGeolocationSpec_base` instead of `HybridNitroBaiduGeolocationSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridNitroBaiduGeolocationSpec_cxx(self as! HybridNitroBaiduGeolocationSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the NitroBaiduGeolocation HybridObject.
 * Implement this protocol to create Swift-based instances of NitroBaiduGeolocation.
 * ```swift
 * class HybridNitroBaiduGeolocation : HybridNitroBaiduGeolocationSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridNitroBaiduGeolocationSpec = HybridNitroBaiduGeolocationSpec_protocol & HybridNitroBaiduGeolocationSpec_base
