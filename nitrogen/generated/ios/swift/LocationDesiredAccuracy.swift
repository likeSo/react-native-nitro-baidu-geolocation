///
/// LocationDesiredAccuracy.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

/**
 * Represents the JS union `LocationDesiredAccuracy`, backed by a C++ enum.
 */
public typealias LocationDesiredAccuracy = margelo.nitro.nitrobaidugeolocation.LocationDesiredAccuracy

public extension LocationDesiredAccuracy {
  /**
   * Get a LocationDesiredAccuracy for the given String value, or
   * return `nil` if the given value was invalid/unknown.
   */
  init?(fromString string: String) {
    switch string {
      case "best":
        self = .best
      case "bestForNavigation":
        self = .bestfornavigation
      case "nearestTenMeters":
        self = .nearesttenmeters
      case "hundredMeters":
        self = .hundredmeters
      case "kilometer":
        self = .kilometer
      case "threeKilometers":
        self = .threekilometers
      default:
        return nil
    }
  }

  /**
   * Get the String value this LocationDesiredAccuracy represents.
   */
  var stringValue: String {
    switch self {
      case .best:
        return "best"
      case .bestfornavigation:
        return "bestForNavigation"
      case .nearesttenmeters:
        return "nearestTenMeters"
      case .hundredmeters:
        return "hundredMeters"
      case .kilometer:
        return "kilometer"
      case .threekilometers:
        return "threeKilometers"
    }
  }
}
