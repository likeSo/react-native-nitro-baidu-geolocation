///
/// NitroBaiduGeolocation-Swift-Cxx-Umbrella.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

// Forward declarations of C++ defined types
// Forward declaration of `CoordinateType` to properly resolve imports.
namespace margelo::nitro::nitrobaidugeolocation { enum class CoordinateType; }
// Forward declaration of `Coordinate` to properly resolve imports.
namespace margelo::nitro::nitrobaidugeolocation { struct Coordinate; }
// Forward declaration of `GeocodePoi` to properly resolve imports.
namespace margelo::nitro::nitrobaidugeolocation { struct GeocodePoi; }
// Forward declaration of `Geocode` to properly resolve imports.
namespace margelo::nitro::nitrobaidugeolocation { struct Geocode; }
// Forward declaration of `GetLocationOptions` to properly resolve imports.
namespace margelo::nitro::nitrobaidugeolocation { struct GetLocationOptions; }
// Forward declaration of `HybridNitroBaiduGeolocationSpec` to properly resolve imports.
namespace margelo::nitro::nitrobaidugeolocation { class HybridNitroBaiduGeolocationSpec; }
// Forward declaration of `LocationDesiredAccuracy` to properly resolve imports.
namespace margelo::nitro::nitrobaidugeolocation { enum class LocationDesiredAccuracy; }
// Forward declaration of `Location` to properly resolve imports.
namespace margelo::nitro::nitrobaidugeolocation { struct Location; }

// Include C++ defined types
#include "Coordinate.hpp"
#include "CoordinateType.hpp"
#include "Geocode.hpp"
#include "GeocodePoi.hpp"
#include "GetLocationOptions.hpp"
#include "HybridNitroBaiduGeolocationSpec.hpp"
#include "Location.hpp"
#include "LocationDesiredAccuracy.hpp"
#include <NitroModules/Promise.hpp>
#include <NitroModules/Result.hpp>
#include <exception>
#include <memory>
#include <optional>
#include <string>
#include <vector>

// C++ helpers for Swift
#include "NitroBaiduGeolocation-Swift-Cxx-Bridge.hpp"

// Common C++ types used in Swift
#include <NitroModules/ArrayBufferHolder.hpp>
#include <NitroModules/AnyMapUtils.hpp>
#include <NitroModules/RuntimeError.hpp>
#include <NitroModules/DateToChronoDate.hpp>

// Forward declarations of Swift defined types
// Forward declaration of `HybridNitroBaiduGeolocationSpec_cxx` to properly resolve imports.
namespace NitroBaiduGeolocation { class HybridNitroBaiduGeolocationSpec_cxx; }

// Include Swift defined types
#if __has_include("NitroBaiduGeolocation-Swift.h")
// This header is generated by Xcode/Swift on every app build.
// If it cannot be found, make sure the Swift module's name (= podspec name) is actually "NitroBaiduGeolocation".
#include "NitroBaiduGeolocation-Swift.h"
// Same as above, but used when building with frameworks (`use_frameworks`)
#elif __has_include(<NitroBaiduGeolocation/NitroBaiduGeolocation-Swift.h>)
#include <NitroBaiduGeolocation/NitroBaiduGeolocation-Swift.h>
#else
#error NitroBaiduGeolocation's autogenerated Swift header cannot be found! Make sure the Swift module's name (= podspec name) is actually "NitroBaiduGeolocation", and try building the app first.
#endif
